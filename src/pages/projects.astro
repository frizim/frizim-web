---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

import { SITE_DESCRIPTION } from '../config';
import Page from '../layouts/Page.astro';
import BrandIcon from '../components/BrandIcon.astro';
import {Image} from "astro:assets";

import "bulma/sass/elements/tag.scss";
import "bulma/sass/grid/_index.scss";

const LABELS = {
    "idea": {
        name: "Idee",
        class: ""
    },
    "planning": {
        name: "In Planung",
        class: "is-warning"
    },
    "wip": {
        name: "In Arbeit",
        class: "is-info"
    },
    "active": {
        name: "Aktiv",
        class: "is-success"
    },
    "archived": {
        name: "Archiviert",
        class: "is-dark"
    }
};

const projects = await getCollection("project");
---
<Page title="Projects" description={SITE_DESCRIPTION}>
    <div class="project-grid">
    {projects.sort((a, b) => a.id.localeCompare(b.id)).map((project: CollectionEntry<"project">) => {
        <div class="card">
            <div class="card-header">
                <p class="card-header-icon p-0 m-2 is-small"><Image src={project.data.icon} height="64" alt=""/></p>
                <h1 class="card-header-title title is-4">{project.data.name}</h1>
                <p class:list={["tag is-medium m-2", LABELS[project.data.state].class]}>{LABELS[project.data.state].name}</p>
            </div>
            <div class="card-content">
                {project.body}
            </div>
            <footer class="card-footer navbar">
                <a href={project.data.repo} target="_blank" class="navbar-item card-footer-item"><BrandIcon icon="github-icon" />Repository</a>
            </footer>
        </div>
    })}
    </div>
</Page>
<style>
    .project-grid {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
        gap: 1rem;
    }

    .project-grid .card {
        display: grid;
        grid-template-rows: 0fr 1fr 0fr;
        flex: 1 1 40%;
        margin-bottom: 0;
    }

    .project-grid .card-header {
        grid-row: 1 / 1;
        text-wrap: nowrap;
    }

    .project-grid .card-content {
        grid-row: 2 / 2;
        text-wrap: wrap;
    }

    .project-grid .card-footer {
        grid-row: 3 / 3;
    }

    .stack {

        input {
            display: none;
        }
    }

    .collapsible {
        display: none;
    }

    .stack input:checked + .collapsible {
        display: block;
    }

    .card-header > .tag {
        border-bottom-right-radius: 0;
        border-top-left-radius: 0;
    }

    footer.card-footer a {
        background-clip: content-box;
        width: 100%;
        display: flex;
    }
</style>