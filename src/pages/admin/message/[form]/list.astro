---
import {readdir} from "node:fs/promises";
import fs from 'node:fs';

import Page from "../../../../layouts/Page.astro";
import FormattedDate from "../../../../components/FormattedDate.astro";
import { MESSAGES_DIR } from "../../../../config";

import "bulma/sass/elements/table.scss";
import "bulma/sass/elements/button.scss";

export const prerender = false;
const regex = /^[a-z-]{1,20}$/;

if(!Astro.params.form || !regex.test(Astro.params.form)) {
    Astro.redirect("/404");
    return;
}

interface Message {
    id: string,
    email: string,
    created: string
}

const files = (await readdir(MESSAGES_DIR + "/" + Astro.params.form))
    .filter((file: string) => file.endsWith(".json"))
    .map((file: string) => JSON.parse(fs.readFileSync(MESSAGES_DIR + "/" +  Astro.params.form + "/" + file).toString()) as Message);
---
<Page title="Nachrichten">
    <h1 class="title">Nachrichten: {Astro.params.form}</h1>
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>E-Mail</th>
                <th>Datum</th>
                <th>Aktionen</th>
            </tr>
        </thead>
        <tbody>
            {files.map((msg: Message) => (
                <tr>
                    <td><a href={"/admin/message/" + Astro.params.form + "/" + msg.id}>{msg.id}</a></td>
                    <td>{msg.email}</td>
                    <td><FormattedDate date={new Date(msg.created)} /></td>
                    <td>
                        <form method="post" action={"/admin/message/" + Astro.params.form + "/delete"}>
                            <input type="hidden" name="messageId" value={msg.id} />
                            <button type="submit" class="button is-danger is-rounded"><i class="icon">delete</i></button>
                        </form>
                    </td>
                </tr>
            ))}
        </tbody>
    </table>
</Page>